#ifndef _FUNCTIONS_H_
#define _FUNCTIONS_H_

#include <math.h>

static inline double sgn(double x) {
  return ( x>0.0 ? +1.0 : (x<0.0 ? -1.0 : 0.0) );
}

// Um arco tangente que funciona para ângulos de +- 90 graus
static inline double arc_tang(double y, double x)
{
  return (x != 0.0 ? atan2(y,x) : (y>=0 ? M_PI/2.0 : -M_PI/2.0));
}

// Retorna um ângulo equivalente no intervalo entre -180 graus e +180 graus
static inline double ang_equiv(double theta)
{
  return (arc_tang(sin(theta), cos(theta)));
}

// Retorna um ângulo rebatido para o 1o ou o 4o quadrante
static inline double ang_equiv2(double theta)
{
  return asin(sin(theta));
}

// Um tan que não dá erro quando theta=90graus
static inline double mytan(double x) {
  return tan(x);
  //return fabs(ang_equiv2(x))<1.5608 ? tan(x) : 100.0;
}

// Eleva ao quadrado
static inline double pow2(double x)
{
  return (x*x);
}

// Retornam o máximo e mínimo
static inline double mymax(double x, double y) {
  return (x>y ? x : y);
}
static inline double mymax(double x, double y, double z) {
  return (x>y ? (x>z ? x : z) : (y>z ? y : z) );
}
static inline double mymin(double x, double y) {
  return (x<y ? x : y);
}
static inline double mymin(double x, double y, double z) {
  return (x<y ? (x<z ? x : z) : (y<z ? y : z) );
}

#endif
